<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.parker.bbs.mapper.UserMapper">
    <!--<cache></cache>-->
    <resultMap id="user" type="com.parker.bbs.pojo.User">
        <id property="id" column="id"/>
        <!--<result property="avatar" column="avatar_id"/>-->
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="info" column="info"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
        <result property="status" column="status"/>
        <result property="level" column="level"/>
        <result property="registerTime" column="register_time"/>
        <result property="activeKey" column="active_key"/>
    </resultMap>
    <sql id="userNameCols">
         ${table}.username, ${table}.password, ${table}.info,
         ${table}.sex, ${table}.email, ${table}.status, ${table}.level,
         ${table}.register_time, ${table}.active_key
    </sql>
    <sql id="userValueCols">
         #{user.username}, #{user.password}, #{user.info}, #{user.sex},
              #{user.email}, #{user.status}, #{user.level}, #{user.registerTime},
              #{user.activeKey}
    </sql>
    <select id="getUserById" resultMap="user" useCache="true">
        select * from user where user.id = #{id}
    </select>
    <insert id="insertUser" parameterType="com.parker.bbs.pojo.User" useGeneratedKeys="true" keyProperty="user.id">
        insert into
          user(
          <include refid="userNameCols"><property name="table" value="user"></property></include>
          )
            values (<include refid="userValueCols"/>)
    </insert>
    <update id="updateUser" parameterType="com.parker.bbs.pojo.User">
        update user set username=#{user.username},
        password=#{user.password}, info=#{user.info}, sex=#{user.sex},
              email=#{user.email}, status=#{user.status}, level=#{user.level},
              register_time=#{user.registerTime}, active_key=#{user.activeKey} where id=#{user.id}
    </update>
    <delete id="deleteUser" parameterType="com.parker.bbs.pojo.User">
        delete from user where id=#{user.id}
    </delete>
    <select id="getUserByUsername" parameterType="String" resultMap="user" useCache="true">
        select * from user where username=#{username}
    </select>
    <select id="getUsersExceptAdminAndSuperAdmin" resultMap="user" useCache="true">
        select * from user where id not in
        (select user_role.user_id from user_role,role where user_role.role_id=role.id and role.name like '%Admin')
        order by ${order} limit #{beginIndex},#{num}
    </select>
    <select id="getUsersNumExceptAdminAndSuperAdmin" resultType="Integer" useCache="true">
        select count(*) from user where id not in
        (select user_role.user_id from user_role,role where user_role.role_id=role.id and role.name like '%Admin')
    </select>
    <insert id="setUserAdmin">
        insert into user_role(user_id, role_id) values(#{userId},(select id from role where name='Admin'))
    </insert>
    <delete id="unsetUserAdmin">
        delete from user_role where user_id = #{userId} and role_id=(select id from role where name='Admin')
    </delete>
    <select id="getAdmins" resultMap="user" useCache="true">
        select * from user where id in
        (select user_role.user_id from user_role,role where user_role.role_id=role.id and role.name='Admin')
        order by ${order} limit #{beginIndex},#{num}
    </select>
    <select id="getAdminsNum" resultType="Integer" useCache="true">
        select count(*) from user where id in
        (select user_role.user_id from user_role,role where user_role.role_id=role.id and role.name='Admin')
    </select>
</mapper>